Description: Common Brighid Infrastructure
Parameters:
  EnableServiceStopping:
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Description: Whether or not to enable service stopping on the cluster

  UseFargateSpot:
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Description: Whether or not to use fargate spot for tasks launched in the cluster.

  BaseDomainName:
    Type: String
    Description: Base Domain Name to use for Brighid Services.

  HostedZoneId:
    Type: String
    Description: ID of the hosted zone to add DNS records to.

Conditions:
  UseFargateSpot: !Equals
    - !Ref UseFargateSpot
    - "true"

  UseFargate: !Equals 
    - !Ref UseFargateSpot
    - "false"

Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: brighid
      Tags:
        - Key: ENABLE_SERVICE_STOPPING
          Value: !Ref EnableServiceStopping

  FargateCapacityProviderAssociation:
    Type: AWS::ECS::ClusterCapacityProviderAssociations
    Condition: UseFargate
    Properties:
      Cluster: !Ref Cluster
      CapacityProviders:
        - FARGATE
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1

  FargateSpotCapacityProviderAssociation:
    Type: AWS::ECS::ClusterCapacityProviderAssociations
    Condition: UseFargateSpot
    Properties:
      Cluster: !Ref Cluster
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE_SPOT
          Weight: 1
        - CapacityProvider: FARGATE
          Weight: 0

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - !ImportValue cfn-utilities:SecretsKeyDecryptPolicyArn
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: ecs-tasks.amazonaws.com

  MigrationsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /brighid/migrations
      RetentionInDays: 14

  MigrationsTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: "256"
      Memory: "512"
      Family: brighid-migrations
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt TaskRole.Arn
      TaskRoleArn: !GetAtt TaskRole.Arn
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: migrations
          Essential: true
          Image: public.ecr.aws/cythral/brighid/base:latest
          EntryPoint:
            - migrate
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref MigrationsLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: brighid

  RequestTopic:
    Type: AWS::SNS::Topic

  ResponseTopic:
    Type: AWS::SNS::Topic

  CacheExpirationTopic:
    Type: AWS::SNS::Topic

  ServiceRegistry:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: !Ref BaseDomainName
      Description: Internal DNS Namespace for Brighid Services.
      Vpc: !ImportValue cfn-utilities:VpcId

  StaticAssetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub static.${BaseDomainName}
      VersioningConfiguration:
        Status: Enabled
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
              - HEAD
            AllowedOrigins:
              - !Sub "http://${BaseDomainName}"
              - !Sub "http://*.${BaseDomainName}"

  StaticAssetsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticAssetsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt StaticAssetsCloudfrontIdentity.S3CanonicalUserId
            Action: s3:ListBucket
            Resource: !Sub arn:aws:s3:::${StaticAssetsBucket}
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt StaticAssetsCloudfrontIdentity.S3CanonicalUserId
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${StaticAssetsBucket}/*

  StaticAssetsCloudfrontIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Origin access identity for Brighid Static Assets

  CognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: false
      DeveloperProviderName: !Ref BaseDomainName
      IdentityPoolName: !Ref BaseDomainName
      SupportedLoginProviders:
        brighid: admin

  SSLCertificate:
    Type: Custom::Certificate
    Properties:
      ServiceToken: !ImportValue cfn-certificate-resource:CertificateLambdaArn
      DomainName: !Sub static.${BaseDomainName}
      ValidationType: DNS
      HostedZoneId: !Ref HostedZoneId
      CreationRoleArn: !ImportValue cfn-certificate-resource:CreatorRoleArn

  CloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub static.${BaseDomainName}
        Comment: CloudFront distribution for Brighid Static Assets
        Enabled: true
        PriceClass: PriceClass_100
        HttpVersion: http2
        ViewerCertificate:
          AcmCertificateArn: !Ref SSLCertificate
          SslSupportMethod: sni-only
        DefaultCacheBehavior:
          TargetOriginId: primary
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - HEAD
            - OPTIONS
            - GET
          ForwardedValues:
            QueryString: true
        Origins:
          - Id: primary
            DomainName: !GetAtt StaticAssetsBucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${StaticAssetsCloudfrontIdentity}

Outputs:
  ClusterName:
    Value: !Ref Cluster
    Description: Name of the ECS Cluster
    Export:
      Name: !Sub ${AWS::StackName}:ClusterName

  RequestTopicArn:
    Value: !Ref RequestTopic
    Description: ARN of the Request / Command Topic
    Export:
      Name: !Sub ${AWS::StackName}:RequestTopicArn

  ResponseTopic:
    Value: !Ref ResponseTopic
    Description: ARN of the Response Topic
    Export:
      Name: !Sub ${AWS::StackName}:ResponseTopicArn

  CacheExpirationTopic:
    Value: !Ref CacheExpirationTopic
    Description: ARN of the Cache Expiration Topic
    Export:
      Name: !Sub ${AWS::StackName}:CacheExpirationTopic

  ServiceRegistry:
    Value: !Ref ServiceRegistry
    Description: Namespace ID of the Service Registry
    Export:
      Name: !Sub ${AWS::StackName}:ServiceRegistry

  ServiceRegistryName:
    Value: !Ref BaseDomainName
    Description: Name of the Service Registry
    Export:
      Name: !Sub ${AWS::StackName}:ServiceRegistryName

  StaticAssetsDomainName:
    Value: !Sub static.${BaseDomainName}
    Description: Domain name to put the static assets repository under.
    Export:
      Name: !Sub ${AWS::StackName}:StaticAssetsDomainName

  StaticAssetsCloudfrontDomainName:
    Value: !GetAtt CloudfrontDistribution.DomainName
    Description: Domain name of the cloudfront distribution to CNAME.
    Export:
      Name: !Sub ${AWS::StackName}:StaticAssetsCloudfrontDomainName